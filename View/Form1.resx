<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pokemonGameStartButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>